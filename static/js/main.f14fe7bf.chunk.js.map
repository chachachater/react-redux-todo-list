{"version":3,"sources":["redux/selectors.js","constansts/style.js","components/AddTodo.js","components/TodoList.js","redux/actionTypes.js","redux/actions.js","App.js","utils.js","reportWebVitals.js","redux/reducers/todos.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["selectTodos","store","todoState","todos","selectFilter","filterState","filter","MEDIA_QUERY_MD","MEDIA_QUERY_SM","TodoTitleWrapper","styled","div","props","theme","colors","border","Title","TodoInput","input","TodoButtonWrapper","Button","button","first_button","AddTodo","className","title","type","placeholder","value","inputValues","onKeyDown","e","handleAddTodo","onChange","handleInputChange","onClick","filterAllTodo","filterFinishedTodo","filterUnFinishedTodo","cleanTodo","TodoItemWrapper","TodoContent","font","$isDone","DeletedButton","second_button","button_font","TodoList","$size","size","todo","id","isDone","content","handleIsDoneButton","handleDeleteTodo","ADD_TODO","DELETE_TODO","TOGGLE_TODO","CLEAN","SET_FILTER","setFilter","payload","App","useSelector","dispatch","useDispatch","useState","setInputValues","useEffect","window","localStorage","setItem","JSON","stringify","saveTodosIntoLocalStorage","key","target","map","deleteTodo","toggleTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","todoId","initialState","todoData","getItem","parse","length","getLocalStorage","combineReducers","state","action","each","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","background","document","getElementById"],"mappings":"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","file":"static/js/main.f14fe7bf.chunk.js","sourcesContent":["export const selectTodos = (store) => store.todoState.todos;\nexport const selectFilter = (store) => store.filterState.filter;\n","export const MEDIA_QUERY_MD = \"@media screen and (min-width: 768px)\";\r\nexport const MEDIA_QUERY_SM = \"@media screen and (max-width: 568px)\";\r\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_SM } from \"../constansts/style.js\";\n\nconst TodoTitleWrapper = styled.div`\n  width: 70%;\n  margin: 20px auto;\n  display: flex;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  padding: 10px 10px;\n  flex-direction: column;\n`;\nconst Title = styled.div`\n  ${MEDIA_QUERY_MD} {\n    font-size: 36px;\n  }\n  ${MEDIA_QUERY_SM} {\n    font-size: 24px;\n  }\n  text-align: center;\n`;\nconst TodoInput = styled.input`\n  ${MEDIA_QUERY_MD} {\n    font-size: 16px;\n  }\n  ${MEDIA_QUERY_SM} {\n    font-size: 12px;\n  }\n  margin: 10px;\n`;\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst Button = styled.button`\n  padding: 5px;\n  margin-top: 5px;\n  & + & {\n    margin-left: 10px;\n  }\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.colors.first_button};\n  ${MEDIA_QUERY_MD} {\n    font-size: 16px;\n  }\n  ${MEDIA_QUERY_SM} {\n    font-size: 12px;\n  }\n`;\nexport default function AddTodo(props) {\n  return (\n    <TodoTitleWrapper className={props.className}>\n      <Title>{props.title}</Title>\n      <TodoInput\n        className=\"input-block\"\n        type=\"text\"\n        placeholder=\"to do what? press enter to add todo.\"\n        value={props.inputValues}\n        onKeyDown={(e) => {\n          props.handleAddTodo(e);\n        }}\n        onChange={(e) => {\n          props.handleInputChange(e);\n        }}\n      />\n      <TodoButtonWrapper>\n        <Button\n          onClick={() => {\n            props.filterAllTodo();\n          }}\n        >\n          All Todo\n        </Button>\n        <Button\n          onClick={() => {\n            props.filterFinishedTodo();\n          }}\n        >\n          Finished\n        </Button>\n        <Button\n          onClick={() => {\n            props.filterUnFinishedTodo();\n          }}\n        >\n          Unfinished\n        </Button>\n        <Button\n          onClick={() => {\n            props.cleanTodo();\n          }}\n        >\n          Clean up\n        </Button>\n      </TodoButtonWrapper>\n    </TodoTitleWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_SM } from \"../constansts/style.js\";\n\nconst TodoItemWrapper = styled.div`\n  width: 70%;\n  margin: auto;\n  display: flex;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  padding: 10px 10px;\n  align-items: center;\n  justify-content: space-between;\n  & + & {\n    margin-top: 20px;\n  }\n`;\nconst TodoContent = styled.div`\n  color: ${(props) => props.theme.colors.font};\n  ${MEDIA_QUERY_MD} {\n    font-size: 16px;\n  }\n  ${MEDIA_QUERY_SM} {\n    font-size: 12px;\n  }\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n  `}\n`;\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst Button = styled.button`\n  padding: 5px;\n  margin-top: 5px;\n  & + & {\n    margin-left: 10px;\n  }\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.colors.first_button};\n  ${MEDIA_QUERY_MD} {\n    font-size: 16px;\n  }\n  ${MEDIA_QUERY_SM} {\n    font-size: 12px;\n  }\n`;\nconst DeletedButton = styled(Button)`\n  background-color: ${(props) => props.theme.colors.second_button};\n  color: ${(props) => props.theme.colors.button_font};\n`;\n\nexport default function TodoList(props) {\n  return (\n    <TodoItemWrapper className={props.className}>\n      <TodoContent\n        $size={props.size}\n        data-todo-id={props.todo.id}\n        $isDone={props.todo.isDone}\n      >\n        {props.content}\n      </TodoContent>\n      <TodoButtonWrapper>\n        <Button\n          onClick={() => {\n            props.handleIsDoneButton(props.todo.id);\n          }}\n        >\n          {props.todo.isDone ? \"已完成\" : \"未完成\"}\n        </Button>\n        <DeletedButton\n          onClick={() => {\n            props.handleDeleteTodo(props.todo.id);\n          }}\n        >\n          刪除\n        </DeletedButton>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n","export const ADD_TODO = \"add_todo\";\nexport const EDIT_TODO = \"edit_todo\";\nexport const DELETE_TODO = \"delete_todo\";\nexport const TOGGLE_TODO = \"toggle_todo\";\nexport const CLEAN = \"clean\";\nexport const SET_FILTER = \"set_filter\";\n","import {\n  ADD_TODO,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  CLEAN,\n  SET_FILTER,\n} from \"./actionTypes\";\n\nexport function addTodo(content) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n    },\n  };\n}\nexport function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\nexport function clean() {\n  return {\n    type: CLEAN,\n  };\n}\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      filter,\n    },\n  };\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTodos, selectFilter } from \"./redux/selectors\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport {\n  addTodo,\n  toggleTodo,\n  deleteTodo,\n  clean,\n  setFilter,\n} from \"./redux/actions\";\nimport { saveTodosIntoLocalStorage } from \"./utils\";\n\nexport default function App() {\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const [inputValues, setInputValues] = useState(\"\");\n  useEffect(() => {\n    saveTodosIntoLocalStorage(todos);\n  }, [todos]);\n  const handleAddTodo = (e) => {\n    if (e.key !== \"Enter\") return;\n    dispatch(addTodo(inputValues));\n    setInputValues(\"\");\n  };\n  return (\n    <div className=\"app\">\n      <AddTodo\n        className=\"title-block\"\n        title=\"Todo List\"\n        inputValues={inputValues}\n        handleAddTodo={handleAddTodo}\n        handleInputChange={(e) => {\n          setInputValues(e.target.value);\n        }}\n        filterAllTodo={() => {\n          dispatch(setFilter(\"all\"));\n        }}\n        filterFinishedTodo={() => {\n          dispatch(setFilter(\"finished\"));\n        }}\n        filterUnFinishedTodo={() => {\n          dispatch(setFilter(\"unfinished\"));\n        }}\n        cleanTodo={() => {\n          dispatch(clean());\n        }}\n      />\n      {todos\n        .filter((todo) =>\n          filter[0] === \"all\"\n            ? todo\n            : filter[0] === \"finished\"\n            ? todo.isDone\n            : filter[0] === \"unfinished\"\n            ? !todo.isDone\n            : todo\n        )\n        .map((todo) => (\n          <TodoList\n            key={todo.id}\n            content={todo.content}\n            todo={todo}\n            handleDeleteTodo={(id) => {\n              dispatch(deleteTodo(id));\n            }}\n            handleIsDoneButton={(id) => {\n              dispatch(toggleTodo(id));\n            }}\n          />\n        ))}\n    </div>\n  );\n}\n","export function saveTodosIntoLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, CLEAN } from \"../actionTypes\";\n\nlet todoId = 0;\nconst getLocalStorage = () => {\n  let todoData = window.localStorage.getItem(\"todos\") || \"\";\n  if (todoData && todoData !== \"[]\") {\n    todoData = JSON.parse(todoData);\n    todoId = todoData[todoData.length - 1].id + 1;\n    return todoData;\n  }\n  todoData = [];\n  return todoData;\n};\nconst initialState = {\n  todos: getLocalStorage(),\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            content: action.payload.content,\n            isDone: false,\n          },\n        ],\n      };\n    }\n    case TOGGLE_TODO: {\n      return {\n        todos: state.todos.map((each) => {\n          if (each.id === action.payload.id) {\n            return {\n              ...each,\n              isDone: !each.isDone,\n            };\n          }\n          return each;\n        }),\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        todos: state.todos.filter((each) => each.id !== action.payload.id),\n      };\n    }\n    case CLEAN: {\n      return {\n        todos: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_FILTER } from \"../actionTypes\";\n\nconst initialState = {\n  filter: [\"all\"],\n};\nexport default function filtersReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_FILTER: {\n      return {\n        filter: [action.payload.filter],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todosReducer from \"./todos\";\nimport filtersReducer from \"./filter\";\n\nexport default combineReducers({\n  todoState: todosReducer,\n  filterState: filtersReducer,\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // dev tool pulgins\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    background: `#EEF0F2`,\n    border: `#141414`,\n    font: `#011638`,\n    first_button: `#EEC643`,\n    second_button: `#0D21A1`,\n    button_font: `#EEF0F2`,\n  },\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}